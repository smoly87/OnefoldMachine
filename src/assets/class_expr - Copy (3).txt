Class baz {
Public bazar:Integer;
Function Integer protest(Var b:Integer;Var a:Integer;){
Var v:Integer;
Let a = 7898;
Return b;
}
Function Integer test(Var al:Integer;Var bl:Integer;){
Var d:Integer;
/*Let this.bazar = 7898;*/
/*Let d =882;
Let bl = 104;*/
/*Let this.bazar = 4444;*/
Let  d = Call this.test(1414,1616);
Return d;
}
Function Integer fac(Var a:Integer;Var b:Integer;){
Var r:Integer;
Let r = 1;
/*If a > 1{*/
/*Let a = a-1;*/
Let r = Call this.fac(a, 5);
/*Let r = a * r;*/
/*} 
Else{
Let r = 1;
}*/

Return r;
}
}
Class foo : Extends baz{
Public bar:Integer;
Public rebar:Integer;
Public rerebar:Integer;
Public barbar:Integer;
}
Var c:foo;
Var a:foo;
Var b:Integer;
/*Var s:String;*/
Let a = New foo();
Let a.bar = 450;
Let b = 98989;
/*Let a.bazar = 850;*/
/*Let b = Call a.protest(111, 222);*/
/*Let b = Call a.test(33333,552);*/
Let b = Call a.fac(10, 5);
/*Let b = 3;*/
/*Sys PrintObjField(a, 3);*/
/*Sys PrintObjField(a, 3);*/
/*Let c = a;

Let a = Null;
Let c = Null;
Sys GarbageCollect();*/
/*Let s = "Hello";
Let a = New foo();

Let c = a;
Let c.bazar = 4500;
Sys PrintObjField(a, 2);
Sys PrintObjField(a, 3);
Let a = Null;
Sys Print(s);*/